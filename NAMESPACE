useDynLib(fmriproj, .registration=TRUE)
importFrom(Rcpp, evalCpp)
importFrom(MASS, ginv)
import(Matrix)
importFrom(lifecycle, deprecate_warn)
export(fr_design_matrix)
export(fr_projector)
export(is.fr_design_matrix)
export(is.fr_projector)
export(make_spmat_triplet)
export(spmat_dense_prod)

export(build_design_matrix)
export(make_trialwise_X)
export(build_projector)
export(adaptive_ridge_projector)
export(collapse_beta)
export(print.fr_design_matrix)
export(print.fr_projector)

export(combine_projection_diagnostics)
export(explain_projection_results)
export(hrf_basis_spmg3_theta)
export(optimize_hrf_mvpa)
export(optimize_joint_hrf_mvpa)
export(fit_pp)
export(predict_pp)

# User-friendly wrappers
export(project_trials)
export(mvpa_searchlight)
export(check_data_compatibility)
export(plot_searchlight_diagnostics)
export(get_searchlight_index)

# rMVPA compatibility functions
export(make_rmvpa_searchlight_fun)
export(as_mvpa_dataset)
export(run_searchlight_projected)
export(pp_feature_selector)
export(train_model.mvpa_model)
export(projection_spec)
export(run_searchlight)
export(run_regional)

# Generic functions (define if not from rMVPA)
export(get_data)
export(get_samples)
export(data_sample)
export(get_mask)

# S3 methods for projecting_dataset
S3method(get_data, projecting_dataset)
S3method(get_samples, projecting_dataset)
S3method(data_sample, projecting_dataset)
S3method(get_mask, projecting_dataset)
S3method(nobs, projecting_dataset)
S3method(print, projecting_dataset)
S3method('[', projecting_dataset)

# Chunked projection functions
export(wrap_as_chunked_projecting_dataset)
export(recommend_chunk_size)
S3method(print, chunked_projecting_dataset)

# Diagnostic functions
export(make_diagnostic_searchlight_fun)
export(attach_projection_diagnostics)
export(plot_projection_diagnostics)
S3method(summary, fmriproj_searchlight_result)

# Helper functions
export(is.projecting_dataset)
export(create_mvpa_design_from_dataset)
export(create_mvpa_dataset_from_dataset)

